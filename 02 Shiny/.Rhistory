geom="text",
geom_params=list(colour="black", hjust=-1),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=as.numeric(round(Avg(RATED_HORSEPOWER)))),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-1),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=as.numeric(round(average(RATED_HORSEPOWER)))),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-1),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=as.numeric(round(avg(RATED_HORSEPOWER)))),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-1),
position=position_identity()
)
View(car2)
View(car2)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car2,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=final),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-1),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car2,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), label=final),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-1),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car2,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME),y= final, label=final),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-1),
position=position_identity()
)
shiny::runApp('DV_SProject/03 R SQL Visualizations/ShinyScatter')
# df <- car %>% group_by(VEHICLE_MANUFACTURER_NAME) %>% summarize(sum(RATED_HORSEPOWER))
# df1 <- df %>% ungroup %>% group_by(CLARITY) %>% summarize(WINDOW_AVG_PRICE=mean(AVG_PRICE))
# df <- inner_join(df, df1, by="CLARITY")
#View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME),y= RATED_HORSEPOWER, label=mean(RATED_HORSEPOWER)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=0),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=mean(RATED_HORSEPOWER)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=0),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=mean(RATED_HORSEPOWER)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=0),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(50000), label=mean(RATED_HORSEPOWER)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=0),
position=position_identity()
)
# df <- car %>% group_by(VEHICLE_MANUFACTURER_NAME) %>% summarize(sum(RATED_HORSEPOWER))
# df1 <- df %>% ungroup %>% group_by(CLARITY) %>% summarize(WINDOW_AVG_PRICE=mean(AVG_PRICE))
# df <- inner_join(df, df1, by="CLARITY")
#View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(sum(RATED_HORSEPOWER)), label=mean(RATED_HORSEPOWER)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=0),
position=position_identity()
)
# Equivalent SQL:select avg(x) as avg, sum(x)+sum(y)+sum(z) as sum, count(*) as n from diamonds;
# df <- car %>% group_by(VEHICLE_MANUFACTURER_NAME) %>% summarize(sum(RATED_HORSEPOWER))
# df1 <- df %>% ungroup %>% group_by(CLARITY) %>% summarize(WINDOW_AVG_PRICE=mean(AVG_PRICE))
# df <- inner_join(df, df1, by="CLARITY")
#View(df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=mean(RATED_HORSEPOWER)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=0),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=mean(RATED_HORSEPOWER)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-1),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title="Horsepower by Manufactuer") +
labs(x="Vehicle Manufacturer Name", y="Rated Horsepower") +
theme(axis.text.x = element_text(angle=90,hjust=1)) +
#  geom_text(data=car, label=(RATED_HORSEPOWER), angle=90) + # Still can't get the labels right
layer(data=car ,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER)), # Find out how to aggregate the horsepower by manufacturer name into averages
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue")
) +
#   layer (data=car,
#     mapping=aes(x=VEHICLE_MANUFACTURER_NAME, y=RATED_HORSEPOWER, label=RATED_HORSEPOWER),
#     stat="identity",
#     stat_params=list(colour="black"),
#     geom="text",
#     geom_params=list(angle=90),
#   )+
layer(data=car3,
mapping=aes(yintercept = final, label="Average"),
geom="hline",
geom_params=list(colour="red")
) +
layer(data=car,
mapping=aes(x=as.character(VEHICLE_MANUFACTURER_NAME), y=as.numeric(RATED_HORSEPOWER), label=mean(RATED_HORSEPOWER)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=0),
position=position_identity()
)
shiny::runApp('DV_SProject/03 R SQL Visualizations/ShinyScatter')
shiny::runApp('DV_SProject/03 R SQL Visualizations/ShinyScatter')
